var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "state", ()=>state
);
parcelHelpers.export(exports, "loadRecipe", ()=>loadRecipe
);
parcelHelpers.export(exports, "loadSearchResults", ()=>loadSearchResults
);
parcelHelpers.export(exports, "getSearchResultPage", ()=>getSearchResultPage
);
var _runtime = require("regenerator-runtime/runtime");
var _config = require("./config");
var _helpers = require("./helpers");
const state = {
    recipe: {
    },
    search: {
        query: '',
        results: [],
        page: 1,
        resultsPerPage: _config.RES_PER_PAGE
    }
};
const loadRecipe = async (id)=>{
    try {
        const data = await _helpers.getJSON(`${_config.API_URL}${id}`);
        const { recipe  } = data.data;
        state.recipe = {
            id: recipe.id,
            title: recipe.title,
            publisher: recipe.publisher,
            sourceUrl: recipe.source_url,
            image: recipe.image_url,
            servings: recipe.servings,
            cookingTime: recipe.cooking_time,
            ingredients: recipe.ingredients
        };
        console.log(state.recipe);
    } catch (err) {
        // Temp Error Handling
        console.error(`${err} `);
        throw err;
    }
};
const loadSearchResults = async (query)=>{
    try {
        state.search.query = query;
        const data = await _helpers.getJSON(`${_config.API_URL}?search=${query}`);
        state.search.results = data.data.recipes.map((rec)=>{
            return {
                id: rec.id,
                title: rec.title,
                publisher: rec.publisher,
                sourceUrl: rec.source_url,
                image: rec.image_url
            };
        });
    } catch (err) {
        console.error(`${err} `);
        throw err;
    }
};
const getSearchResultPage = (page = state.search.page)=>{
    state.search.page = page;
    const start = (page - 1) * state.search.resultsPerPage; //0
    const end = page * state.search.resultsPerPage; //9
    return state.search.results.slice(start, end);
};
